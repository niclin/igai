<% Gon.product_remainder_attachment_quota = @product.remainder_attachment_quota %>

<%= simple_form_for [:account, @product], html: { multipart: true, class: "dropzone", id: "product_form" } do |f| %>
  <div id="error_explanation">
    <ul>
      <% @product.errors.full_messages.each do |msg| %>
        <li> * <%= msg %></li>
      <% end %>
    </ul>
  </div>

  <%= f.input :product_type, collection: Product::TYPE.map(&:to_sym), include_blank: false %>
  <%= f.input :title %>

  <%= f.input :category_ids, label: "適用車系", collection: render_cached_grouped_catrgory_collection, as: :grouped_select, group_method: :last, input_html: { id: "js-catrgories-multiple-select", multiple: true } %>

  <small>快速選取：<a href="javascript:undefined;" id="1to3cygnus">1-3代勁戰</a></small>
  <%= f.input :description, as: :text %>
  <%= f.input :price %>

  <div class="form-group required product_attachments form-group-invalid">
  <%= f.simple_fields_for :attachments do |attachment| %>
    <% if !attachment.object.new_record? %>
      <div class="dz-preview dz-image-preview" name="<%= attachment.object_name %>">
        <%= image_tag(attachment.object.image.thumb.url, class: "mini-img") %>
        <%= attachment.check_box :_destroy, class: "d-none" %>
      <a class="dz-remove" href="javascript:undefined;" onclick="removeImage('<%= attachment.object_name %>')">刪除圖片</a>
      </div>
    <% end %>
  <% end %>

  <% @current_product_attachments_count = f.object.new_record? ? 0 : f.object.attachments.count %>

  <div id="dropzonePreview" style="display: inline;"></div>

  <% if !@product.remainder_attachment_quota.zero? %>
  <div id="dropzone-click-target" class="product-form-dropzone-target" >
    <i class="text-secondary fa fa-plus fa-2x product-form-dropzone-target--plus-symbol"></i>
  </div>
<% end %>

  </div>
  <%= f.button :submit, "儲存", class: "btn btn-primary btn-block", data: { disable_with: "儲存中..." } %>
<% end %>

<script>
$(document).ready(function() {
  $('#js-catrgories-multiple-select').select2({
    language: "zh-TW",
    theme: "bootstrap",
    placeholder: "選擇適用車系...",
    minimumSelectionLength: 1,
    maximumSelectionLength: 5
  });
});

$("#1to3cygnus").click(function() {
  $('#js-catrgories-multiple-select').val([1, 2, 3]).change()
})

autosize(document.querySelectorAll('textarea'));

// 避免 render :edit 還帶著刪除圖片的 checkbox
$('input:checkbox').removeAttr('checked');

Dropzone.options.productForm = { // The camelized version of the ID of the form element

  // The configuration we've talked about above
  autoProcessQueue: false,
  uploadMultiple: true,
  parallelUploads: 100,
  maxFiles: 100,
  paramName1: "product[attachments_attributes]",
  paramName2: "[image]",
  addRemoveLinks: true,
  autoDiscover: false,
  previewsContainer: '#dropzonePreview',
  // this tells that the dropzone will not be clickable . we have to do it because v dont want the whole form to be clickable
  clickable: '#dropzone-click-target',
  acceptedFiles: "image/*",
  // bad way to upload image when server side :(
  currentImagesCount: <%= @current_product_attachments_count %>,
  dictRemoveFile: "刪除圖片",
  maxFilesize: 5,
  maxFiles: gon.product_remainder_attachment_quota,
  dictCancelUpload: "",

  // The setting up of the dropzone
  init: function() {
    $('.dz-message').css('display','none');
    var myDropzone = this;

    // First change the button to actually tell Dropzone to process the queue.
    this.element.querySelector("input[type=submit]").addEventListener("click", function(e) {
      // Make sure that the form isn't actually being sent.
      e.preventDefault();
      e.stopPropagation();
      if (myDropzone.getQueuedFiles().length > 0) {
        myDropzone.processQueue();
        $('input[data-disable-with]').attr("disabled", true).val("儲存中...")
      } else {
        $("#product_form").off('submit').submit();
      }
    });

    this.on("maxfilesexceeded", function(file){
      this.removeFile(file)
      if (!$(".toast-message").length) {
        toastr.warning("您最多只能上傳 <%= Product::ATTACHMENT_LIMIT %> 張圖片")
      }
    });

    // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
    // of the sending event because uploadMultiple is set to true.
    this.on("sendingmultiple", function() {
      // Gets triggered when the form is actually being sent.
      // Hide the success button or the complete form.
    });
    this.on("successmultiple", function(files, response) {
      // Gets triggered when the files have successfully been sent.
      // Redirect user or notify of success.
      window.location.replace(response.redirectURL)
    });
    this.on("errormultiple", function(files, response) {
      // Gets triggered when there was an error sending the files.
      // Maybe show form again, and notify user of error
    });
  }
}

function removeImage(input) {
  var element = $('div[name$=' + "'" + input+ "'" + ']')
  element.addClass("d-none")
  $('input[name$=' + "'" + input + '[_destroy]' + "'" + ']').val(1)
  gon.product_remainder_attachment_quota = gon.product_remainder_attachment_quota - 1
}
</script>
